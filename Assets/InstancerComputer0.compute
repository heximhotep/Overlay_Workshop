// Each #kernel tells which function to compile; you can have many kernels
CGPROGRAM

#pragma kernel MakeInstanceMatrices

StructuredBuffer<float4x4> instanceBuf;
globallycoherent RWStructuredBuffer<float4x4> outputBuf;

uint instanceCount;

[numthreads(16,1,1)]
void MakeInstanceMatrices (uint3 id : SV_DispatchThreadID)
{
	uint idx = id.x;
	AllMemoryBarrierWithGroupSync();
	if (idx < instanceCount)
	{
		
		float4x4 datum = instanceBuf[idx];
		float3 pos = datum._m00_m10_m20;
		float3 dir = datum._m01_m11_m21;
		float3 up = float3(0, 1, 0);
		float3 xaxis = normalize(cross(up, dir));
		float3 yaxis = normalize(cross(dir, xaxis));
		xaxis = xaxis;
		yaxis = yaxis;
		dir =   dir;
		/*float4x4 result = float4x4(xaxis.x, xaxis.y, xaxis.z, pos.x,
								   yaxis.x, yaxis.y, yaxis.z, pos.y,
									 dir.x,   dir.y,   dir.z, pos.z,
								         0,       0,       0,     1 );
										 */
		float4x4 result = float4x4(xaxis.x, yaxis.x,   dir.x, pos.x,
								   xaxis.y, yaxis.y,   dir.y, pos.y,
								   xaxis.z, yaxis.z,   dir.z, pos.z,
			                             0,       0,       0,     1);
		/*
		float4x4 result = float4x4((float)instanceBuf[id.x]._m00, 0, 0, 0,
			0, 0, 0, 0,
			0, 0, 0, 0,
			0, 0, 0, 0);
			*/
		outputBuf[idx] = result;
		
	}
}
ENDCG